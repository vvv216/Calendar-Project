Please run the program with qt 6.2.1.
Extract the zip file.
All of the doxygen file was saved under folder “html”
All of our project program like .cpp .h and .ui was saved under folder “final”
Then please save the file “city.json” and “config.json”, into the build path of this project when you try to compile. If you are using Qt Creator, please save them into the folder “build-weatherKalendar-Desktop_Qt_6_2_1_GCC_64bit-Debug”
 we actually provided this folder in the zip file, but in case you are building this from nothing. There will be one created by qt creator, the location is up your setting of Qt Creator, but usually under the same dictionary
If you try to compile this with qmake command from terminal, just save everything from folder “final” into home dictionary and do the following:
There are two ways to compile this project:
First, since we already moved all files into the main dictionary. Just go to terminal and type in the following command：
qmake
make
./weatherKalendar
Or, create a project in the qtcreator and move all the files in the project location, be sure to use the .pro file we provided. Then you can run it in the qt creator. You can also just open a .pro file with qt creator, it will create this project for you by the pro file setting. Just make sure you configure this project with qt version 6.2.1. 
If this is the first time you compile this project with Qt Creator and you didn’t use the build path folder we provided. The first compiler might have crashed. But the “build-weatherKalendar-Desktop_Qt_6_2_1_GCC_64bit-Debug” folder should be created. Just save two .json files I mentioned before into this build path file, the next compile should be good.
Hint: the build path file name may be different for the word “weather” But the overall name should be very similar. Just save two json files to whatever build path file Qt Creator created in your computer.
Once the login UI showed up, since this is the first time this project compiled on this computer. Click the button “New User? Sign Up Here!”, then the sign up UI will show on the screen. Hint：if you are using the bulidpath we provided there will be a account available:User name “aaa”, password “111”。
Type in the username and the password. Be sure two password matches.Hint: Please don’t start your username and passport with some weird symbol like “@” or “%”. Otherwise it will pop up a warning. Since this is the first username saved in the database, it won’t send any warnings. But if this is not the first user name signed up. You have to register with a different username, or it will send a warning message. Please don't register with a blank for either username and password. If you want to find your account info, go the the build path file and check “userdatabase.txt” everything should be wrote in this file.
Also, the length of username and password should be less than 20 characters. A warning will pop up if you try to register a username or password longer than 20 characters.  Once it successfully sign up a message will pop up, click on the button on the message. It will take you back to login.
Now just type in the username and password just signed up. If you typed wrong username or password it will warn you about which part is wrong. After signing up correctly, the main calendar UI will be shown on the screen.
After entering the main calendar UI, the whole UI is divided into four parts as shown, which are calendar page, general option box, date box and text format box. For the calendar page, you could choose the data you want in any dates of any month or year under the maximum and minimum limit. Below the calendar, there are four push buttons which are used to add events, delete events, search the weather condition of different regions and email to whom you want to share. We currently only allow one event to be added per day in order to prevent the overlapping. After adding the events, the users can save the events from the menu bar by giving a file name. Next time, they can also open the former file from their personal computer by using the opening button from the menu. For the data box, it will tell you the maximum and minimum date you could select. And also the date you are currently selecting. For the general option box and text format box, you could customize what you like including language, calendar color, text formation, etc. 
For weather info, just click the “weather” button on the calendar window. Then there will be a weather ui showing on the screen. Just select one of the cities on the second drop down list and then click the search button. The weather info and temperature info will be displayed on the UI. It might be slow depending on internet speed. I only set some of Canada's cities on the menu, because it seems enough for this project testing. If we decide to add some more cities in the future, we can just add some city info into “city.json”. The api we are using is from https://dev.qweather.com/en/docs/api/
For email service, users can enter one recipient email address without any blank space, and add one attachment file. After sending the email, all data will be clear. It is ready to send again for the next email. In addition, if the users use UWO email address as recipient, the email might be determined as SPAM by the UWO spamtrap, so the GMAIL will be preferred.  
